// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using utools.Data;

namespace utools.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("utools.Models.Cnae", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Empresacnpj")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Empresacnpj1")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("code")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("text")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("Empresacnpj");

                    b.HasIndex("Empresacnpj1");

                    b.ToTable("Cnaes");
                });

            modelBuilder.Entity("utools.Models.Empresa", b =>
                {
                    b.Property<string>("cnpj")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int?>("CnaeId")
                        .HasColumnType("int");

                    b.Property<string>("abertura")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("bairro")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("cep")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("complemento")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("data_situacao")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("efr")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("fantasia")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("logradouro")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("municipio")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("natureza_juridica")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("nome")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("numero")
                        .HasColumnType("int");

                    b.Property<string>("porte")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("situacao")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("telefone")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("tipo")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("uf")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("cnpj");

                    b.HasIndex("CnaeId");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("utools.Models.Cnae", b =>
                {
                    b.HasOne("utools.Models.Empresa", null)
                        .WithMany("atividade_principal")
                        .HasForeignKey("Empresacnpj");

                    b.HasOne("utools.Models.Empresa", null)
                        .WithMany("atividades_secundarias")
                        .HasForeignKey("Empresacnpj1");
                });

            modelBuilder.Entity("utools.Models.Empresa", b =>
                {
                    b.HasOne("utools.Models.Cnae", "Cnae")
                        .WithMany()
                        .HasForeignKey("CnaeId");
                });
#pragma warning restore 612, 618
        }
    }
}
